[{"C:\\Users\\Padmaravi\\Desktop\\careerfoundry\\meet\\src\\reportWebVitals.js":"1","C:\\Users\\Padmaravi\\Desktop\\careerfoundry\\meet\\src\\App.js":"2","C:\\Users\\Padmaravi\\Desktop\\careerfoundry\\meet\\src\\index.js":"3","C:\\Users\\Padmaravi\\Desktop\\careerfoundry\\meet\\src\\EventList.js":"4","C:\\Users\\Padmaravi\\Desktop\\careerfoundry\\meet\\src\\CitySearch.js":"5","C:\\Users\\Padmaravi\\Desktop\\careerfoundry\\meet\\src\\mock-data.js":"6","C:\\Users\\Padmaravi\\Desktop\\careerfoundry\\meet\\src\\api.js":"7","C:\\Users\\Padmaravi\\Desktop\\careerfoundry\\meet\\src\\Event.js":"8","C:\\Users\\Padmaravi\\Desktop\\careerfoundry\\meet\\src\\NumberOfEvents.js":"9","C:\\Users\\Padmaravi\\Desktop\\careerfoundry\\meet\\src\\Alert.js":"10","C:\\Users\\Padmaravi\\Desktop\\careerfoundry\\meet\\src\\service-worker.js":"11","C:\\Users\\Padmaravi\\Desktop\\careerfoundry\\meet\\src\\serviceWorkerRegistration.js":"12","C:\\Users\\Padmaravi\\Desktop\\careerfoundry\\meet\\src\\EventGenre.js":"13"},{"size":362,"mtime":499162500000,"results":"14","hashOfConfig":"15"},{"size":2881,"mtime":1608325905899,"results":"16","hashOfConfig":"15"},{"size":1051,"mtime":1608173475401,"results":"17","hashOfConfig":"15"},{"size":437,"mtime":1607977948063,"results":"18","hashOfConfig":"15"},{"size":2008,"mtime":1608075097330,"results":"19","hashOfConfig":"15"},{"size":11845,"mtime":1608191068354,"results":"20","hashOfConfig":"15"},{"size":3763,"mtime":1608191505956,"results":"21","hashOfConfig":"15"},{"size":1147,"mtime":1608058803429,"results":"22","hashOfConfig":"15"},{"size":1132,"mtime":1608075987034,"results":"23","hashOfConfig":"15"},{"size":748,"mtime":1608074178382,"results":"24","hashOfConfig":"15"},{"size":2837,"mtime":1608094161091,"results":"25","hashOfConfig":"15"},{"size":5064,"mtime":1608094154381,"results":"26","hashOfConfig":"15"},{"size":1380,"mtime":1608326123058,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"139qewo",{"filePath":"31","messages":"32","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Padmaravi\\Desktop\\careerfoundry\\meet\\src\\reportWebVitals.js",[],["59","60"],"C:\\Users\\Padmaravi\\Desktop\\careerfoundry\\meet\\src\\App.js",["61","62","63"],"C:\\Users\\Padmaravi\\Desktop\\careerfoundry\\meet\\src\\index.js",[],["64","65"],"C:\\Users\\Padmaravi\\Desktop\\careerfoundry\\meet\\src\\EventList.js",[],"C:\\Users\\Padmaravi\\Desktop\\careerfoundry\\meet\\src\\CitySearch.js",[],"C:\\Users\\Padmaravi\\Desktop\\careerfoundry\\meet\\src\\mock-data.js",[],"C:\\Users\\Padmaravi\\Desktop\\careerfoundry\\meet\\src\\api.js",["66"],"/**\r\n *\r\n * @param {*} events:\r\n * The following function should be in the “api.js” file.\r\n * This function takes an events array, then uses map to create a new array with only locations.\r\n * It will also remove all duplicates by creating another new array using the spread operator and spreading a Set.\r\n * The Set will remove all duplicates from the array.\r\n */\r\n\r\nimport { mockData } from './mock-data';\r\nimport axios from 'axios'; \r\n//import NProgress from 'nprogress';\r\n\r\nexport const extractLocations = (events) => {\r\n    var extractLocations = events.map((event) => event.location);\r\n    var locations = [...new Set(extractLocations)];\r\n    return locations;\r\n  };\r\n\r\n  // const checkToken = async (accessToken) => {\r\n  //   const result = await fetch(\r\n  //     `https://www.googleapis.com/oauth2/v1/tokeninfo?access_token=${accessToken}`\r\n  //   )\r\n  //     .then((res) => res.json())\r\n  //     .catch((error) => error.json());\r\n  \r\n  //   return result;\r\n  // };\r\n  export const getEvents = async () => {\r\n  //   NProgress.start();\r\n\r\n  //   if (window.location.href.startsWith(\"http://localhost\")) {\r\n  //     NProgress.done();\r\n  //     return mockData;\r\n  //   }\r\n  //   const token = await getAccessToken();\r\n\r\n  // if (token) {\r\n  //   removeQuery();\r\n  //   const url = `https://h05my7dqfb.execute-api.eu-central-1.amazonaws.com/dev/api/get-events/${token}`;\r\n  //   const result = await axios.get(url);\r\n  //   if (result.data) {\r\n  //     var locations = extractLocations(result.data.events);\r\n  //     localStorage.setItem(\"lastEvents\", JSON.stringify(result.data));\r\n  //     localStorage.setItem(\"locations\", JSON.stringify(locations));\r\n  //   }\r\n  //   NProgress.done();\r\n  //   return result.data.events;\r\n  // }\r\n    return mockData;\r\n  };\r\n  // if (!navigator.onLine) {\r\n  //   const events = localStorage.getItem(\"lastEvents\");\r\n  //   NProgress.done();\r\n  //   return { events: JSON.parse(events).events, locations:   extractLocations(JSON.parse(events).events) };\r\n  // }\r\n\r\n  // export const getAccessToken = async () => {\r\n  //   const accessToken = localStorage.getItem('access_token');\r\n  //   const tokenCheck = accessToken && (await checkToken(accessToken));\r\n\r\n  //   if (!accessToken || tokenCheck.error) {\r\n  //     await localStorage.removeItem(\"access_token\");\r\n  //     const searchParams = new URLSearchParams(window.location.search);\r\n  //     const code = await searchParams.get(\"code\");\r\n  //     if (!code) {\r\n  //       const results = await axios.get(\r\n  //         \"https://h05my7dqfb.execute-api.eu-central-1.amazonaws.com/dev/api/get-auth-url\"\r\n  //       );\r\n  //       const { authUrl } = results.data;\r\n  //       return (window.location.href = authUrl);\r\n  //     }\r\n  //     return code && getToken(code);\r\n  //   }\r\n  //   return accessToken;\r\n\r\n  // }\r\n  // const getToken = async (code) => {\r\n  //   const encodeCode = encodeURIComponent(code);\r\n  //   const { access_token } = await fetch(\r\n  //     `https://h05my7dqfb.execute-api.eu-central-1.amazonaws.com/dev/api/token/${encodeCode}`\r\n  //   )\r\n  //     .then((res) => {\r\n  //       return res.json();\r\n  //     })\r\n  //     .catch((error) => error);\r\n  \r\n  //   access_token && localStorage.setItem(\"access_token\", access_token);\r\n  \r\n  //   return access_token;\r\n  // };\r\n\r\n  // const removeQuery = () => {\r\n  //   if (window.history.pushState && window.location.pathname) {\r\n  //     var newurl =\r\n  //       window.location.protocol +\r\n  //       \"//\" +\r\n  //       window.location.host +\r\n  //       window.location.pathname;\r\n  //     window.history.pushState(\"\", \"\", newurl);\r\n  //   } else {\r\n  //     newurl = window.location.protocol + \"//\" + window.location.host;\r\n  //     window.history.pushState(\"\", \"\", newurl);\r\n  //   }\r\n  // };","C:\\Users\\Padmaravi\\Desktop\\careerfoundry\\meet\\src\\Event.js",[],["67","68"],"C:\\Users\\Padmaravi\\Desktop\\careerfoundry\\meet\\src\\NumberOfEvents.js",[],"C:\\Users\\Padmaravi\\Desktop\\careerfoundry\\meet\\src\\Alert.js",[],["69","70"],"C:\\Users\\Padmaravi\\Desktop\\careerfoundry\\meet\\src\\service-worker.js",[],"C:\\Users\\Padmaravi\\Desktop\\careerfoundry\\meet\\src\\serviceWorkerRegistration.js",[],"C:\\Users\\Padmaravi\\Desktop\\careerfoundry\\meet\\src\\EventGenre.js",["71"],{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","severity":1,"message":"77","line":10,"column":57,"nodeType":"78","messageId":"79","endLine":10,"endColumn":65},{"ruleId":"76","severity":1,"message":"80","line":10,"column":67,"nodeType":"78","messageId":"79","endLine":10,"endColumn":70},{"ruleId":"76","severity":1,"message":"81","line":10,"column":72,"nodeType":"78","messageId":"79","endLine":10,"endColumn":76},{"ruleId":"72","replacedBy":"82"},{"ruleId":"74","replacedBy":"83"},{"ruleId":"76","severity":1,"message":"84","line":11,"column":8,"nodeType":"78","messageId":"79","endLine":11,"endColumn":13},{"ruleId":"72","replacedBy":"85"},{"ruleId":"74","replacedBy":"86"},{"ruleId":"72","replacedBy":"87"},{"ruleId":"74","replacedBy":"88"},{"ruleId":"89","severity":1,"message":"90","line":13,"column":51,"nodeType":"91","endLine":13,"endColumn":59,"suggestions":"92"},"no-native-reassign",["93"],"no-negated-in-lhs",["94"],"no-unused-vars","'PieChart' is defined but never used.","Identifier","unusedVar","'Pie' is defined but never used.","'Cell' is defined but never used.",["93"],["94"],"'axios' is defined but never used.",["93"],["94"],["93"],["94"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getData'. Either include it or remove the dependency array.","ArrayExpression",["95"],"no-global-assign","no-unsafe-negation",{"desc":"96","fix":"97"},"Update the dependencies array to be: [events, getData]",{"range":"98","text":"99"},[310,318],"[events, getData]"]